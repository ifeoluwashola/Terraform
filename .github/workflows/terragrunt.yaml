name: AWS Infrastructure Deployment

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:

  deploy:
    runs-on: ubuntu-latest
    env: 
      TERRAGRUNT_TFPATH: /usr/local/bin/terraform
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2

    - name: Install Terragrunt
      run: |
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.48.4/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

    - name: Setup Terragrunt
      uses: actions/setup-go@v5
      with:
        go-version: '^1.13.1'

    - name: Initialize Terragrunt
      run: terragrunt run-all init --terragrunt-source-update
      working-directory: ./ECS/dev

    - name: Terragrunt Validate
      run: terragrunt run-all validate
      working-directory: ./ECS/dev

    - name: Terragrunt Plan
      run: terragrunt run-all plan
      working-directory: ./ECS/dev
      
    - name: Terragrunt Apply
      if: (github.ref_name == 'main' || github.ref_name == 'development') && (github.event.pull_request.merged == true || github.event_name == 'push')
      run: |
        terragrunt run-all apply --terragrunt-non-interactive
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./ECS/dev
